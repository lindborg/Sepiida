package sepiida {	import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.events.Event;	import sepiida.weapons.Explosion;	import sepiida.enemies.Enemy;		public class Movement extends MovieClip {		protected var speedLeft:Number = 0;		protected var speedRight:Number = 0;		protected var speedUp:Number = 0;		protected var speedDown:Number = 0;				protected var frictionLeft:Number = 1;		protected var frictionRight:Number = 1;		protected var frictionUp:Number = 1;		protected var frictionDown:Number = 1;				protected var accLeft:Number = 10;		protected var accRight:Number = 10;		protected var accUp:Number = 10;		protected var accDown:Number = 10;				protected var margin:Number = 200;				public function Movement() {			addEventListener(Event.ADDED_TO_STAGE,onAdded);		}		private function onAdded(event:Event):void {			addEventListener(Event.ENTER_FRAME,onEnterFrame);			addEventListener(Event.REMOVED,onRemoved);		}		private function onRemoved(event:Event):void {			removeEventListener(Event.ENTER_FRAME,onEnterFrame);			removeEventListener(Event.REMOVED,onRemoved);		}		private function onEnterFrame(event:Event):void {			render();		}		protected function render():void {			speed();			friction();			garbage();		}		protected function speed():void {			var left:Number = speedLeft;			var right:Number = speedRight;			var up:Number = speedUp;			var down:Number = speedDown;						x -= left;			x += right;			y -= up;			y += down;		}		protected function friction():void {						if(speedLeft < 0) { speedLeft += frictionLeft; }			else if(speedLeft > 0) { speedLeft -= frictionLeft; }						if(speedRight < 0) { speedRight += frictionRight; }			else if(speedRight > 0) { speedRight -= frictionRight; }						if(speedUp < 0) { speedUp += frictionUp; }			else if(speedUp > 0) { speedUp -= frictionUp; }						if(speedDown < 0) { speedDown += frictionDown; }			else if(speedDown > 0) { speedDown -= frictionDown; }		}		protected function garbage():void {			if(x < -margin || x > stage.stageWidth+margin || y < -margin || y > stage.stageHeight+margin) {				remove();			}		}		public function hitTestEnemies():void {			for(var i:uint = 0; parent.numChildren > i; i++) {				var child:DisplayObject = parent.getChildAt(i);				if(child is Enemy && child.hitTestObject(this)) {					Enemy(child).die();					die();					break;				}			}		}		public function die():void {			var explosion:Explosion = new Explosion();			explosion.x = x;			explosion.y = y;						var size:Number = Math.max(width,height);			explosion.scaleY = explosion.scaleX = size/60;						parent.addChild(explosion);						remove();		}		public function remove():void {			parent.removeChild(this);		}	}}