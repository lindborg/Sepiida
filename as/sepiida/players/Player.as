package sepiida.players {	import sepiida.Movement;	import sepiida.weapons.*;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;		public class Player extends Movement {		protected var isKeyLeft:Boolean = false;		protected var isKeyRight:Boolean = false;		protected var isKeyUp:Boolean = false;		protected var isKeyDown:Boolean = false;				protected var weaponIndex:uint = 0;				public function Player() {			addEventListener(Event.ADDED,onAdded);		}		private function onAdded(event:Event):void {			stage.addEventListener(KeyboardEvent.KEY_DOWN,onKeyDown);			stage.addEventListener(KeyboardEvent.KEY_UP,onKeyUp);			addEventListener(Event.ENTER_FRAME,onEnterFrame);		}		private function onKeyDown(event:KeyboardEvent):void {			switch(event.keyCode) {				case Keyboard.LEFT: isKeyLeft = true; break;				case Keyboard.RIGHT: isKeyRight = true; break;				case Keyboard.UP: isKeyUp = true; break;				case Keyboard.DOWN: isKeyDown = true; break;								case Keyboard.SPACE: shoot(); break;								case ('1').charCodeAt(0): weaponIndex = 0; break;				case ('2').charCodeAt(0): weaponIndex = 1; break;				case ('3').charCodeAt(0): weaponIndex = 2; break;			}		}		private function onKeyUp(event:KeyboardEvent):void {			switch(event.keyCode) {				case Keyboard.LEFT: isKeyLeft = false; break;				case Keyboard.RIGHT: isKeyRight = false; break;				case Keyboard.UP: isKeyUp = false; break;				case Keyboard.DOWN: isKeyDown = false; break;			}		}		private function onEnterFrame(event:Event):void {			parent.x = ((stage.stageWidth/2)-x)/3;			parent.y = ((stage.stageHeight/2)-y)/3;		}		override protected function speed():void {			super.speed();						if(isKeyLeft) { speedLeft = accLeft; }			if(isKeyRight) { speedRight = accRight; }			if(isKeyUp) { speedUp = accUp; }			if(isKeyDown) { speedDown = accDown; }						scaleX = (speedLeft > speedRight)?-1:1;						hitTestEnemies();		}		public function shoot():void {			var weapon:Weapon;						switch(weaponIndex) {				case 0: weapon = new Bullet(); break;				case 1: weapon = new Missile(); break;				case 2: weapon = new Bomb(); break;			}						weapon.x = x;			weapon.y = y;						parent.addChild(weapon);		}	}}